{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNAXEFkaUTO5koG0/cQvZRX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Gradio 사용법\n","\n","머신러닝 모델, API 또는 데이터 과학 Workflow를 다른 사용자와 공유하는 가장 좋은 방법 중 하나는 사용자나 동료가 브라우저에서 여러분이 만든 웹앱을 실행할 수 있는 대화형 앱을 만드는 것입니다.\n","\n","Gradio를 사용하면 쉽고 빠르게 파이썬으로 데모를 구축하고 공유할 수 있습니다. 단, 몇 줄의 코드만으로요! 그럼 시작해보죠."],"metadata":{"id":"3alX3QlKYHqw"}},{"cell_type":"markdown","source":["## Hello, World\n","\n","간단한 \"Hello, World\" 예제를 사용하여 Gradio를 실행하려면 다음 세 단계를 따라 실행합니다."],"metadata":{"id":"lOVBipf-YbGz"}},{"cell_type":"markdown","source":["### 1. pip을 사용하여 Gradio 설치"],"metadata":{"id":"KcUMhT10Yk7t"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j9LlPKwFYAlo","executionInfo":{"status":"ok","timestamp":1685736455847,"user_tz":-540,"elapsed":14720,"user":{"displayName":"Taehee Lee","userId":"12017922817927484990"}},"outputId":"94acdd26-775d-4945-deab-f4e43bd594e1"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m20.0/20.0 MB\u001b[0m \u001b[31m93.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m81.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m57.0/57.0 kB\u001b[0m \u001b[31m8.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m288.1/288.1 kB\u001b[0m \u001b[31m31.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.4/75.4 kB\u001b[0m \u001b[31m9.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m236.8/236.8 kB\u001b[0m \u001b[31m27.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.5/50.5 kB\u001b[0m \u001b[31m5.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m137.0/137.0 kB\u001b[0m \u001b[31m9.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.7/45.7 kB\u001b[0m \u001b[31m5.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m3.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m129.9/129.9 kB\u001b[0m \u001b[31m8.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.5/114.5 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m268.8/268.8 kB\u001b[0m \u001b[31m37.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.6/149.6 kB\u001b[0m \u001b[31m19.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.0/67.0 kB\u001b[0m \u001b[31m8.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m72.5/72.5 kB\u001b[0m \u001b[31m9.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for ffmpy (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["!pip install -q gradio"]},{"cell_type":"markdown","source":["### 2. 아래 파이썬 코드 실행"],"metadata":{"id":"p_ripn5NYv2l"}},{"cell_type":"code","source":["import gradio as gr\n","\n","def greet(name):\n","    return \"Hello \" + name + \"!\"\n","\n","demo = gr.Interface(fn=greet, inputs=\"text\", outputs=\"text\")\n","\n","demo.launch(debug=True, share=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"Pyyh5gh9YorV","executionInfo":{"status":"ok","timestamp":1685736472663,"user_tz":-540,"elapsed":14114,"user":{"displayName":"Taehee Lee","userId":"12017922817927484990"}},"outputId":"cccc47f4-d670-4986-e120-18798466f511"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n","Running on public URL: https://867cf65d2da97c0742.gradio.live\n","\n","This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div><iframe src=\"https://867cf65d2da97c0742.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Keyboard interruption in main thread... closing server.\n","Killing tunnel 127.0.0.1:7860 <> https://867cf65d2da97c0742.gradio.live\n"]},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["## 인터페이스\n","\n","데모를 만들기 위해 Gradio를 만들었습니다. 이 인터페이스 클래스는 우리가 작성하는 인터페이스로 파이썬 함수 형태로 작성할 수 있습니다. 위의 예제에서, 우리는 간단한 텍스트 기반 함수를 실습했지만, 그 함수는 음악 생성 인공지능, 세금 계산기, 사전 훈련된 머신러닝 모델의 예측 기능에 이르기까지 모든 것으로 응용할 수 있습니다.\n","\n","- fn: UI를 감쌀 함수\n","- inputs: 입력으로 사용할 인터페이스 (e.g. \"text\", \"image\" or \"audio\")\n","- outputs: 출력으로 사용할 인터페이스 (e.g. \"text\", \"image\" or \"label\")"],"metadata":{"id":"-zFWxjvbaGkX"}},{"cell_type":"markdown","source":["### 이미지 입력, 이미지 출력 예제\n","\n","아래는 이미지를 입력으로 받아 세피아 필터를 씌워 이미지로 출력하는 웹앱 예제입니다."],"metadata":{"id":"Oj5D58CY5Xas"}},{"cell_type":"code","source":["import numpy as np\n","import gradio as gr\n","\n","def sepia(input_img):\n","    sepia_filter = np.array([\n","        [0.393, 0.769, 0.189], \n","        [0.349, 0.686, 0.168], \n","        [0.272, 0.534, 0.131]\n","    ])\n","    sepia_img = input_img.dot(sepia_filter.T)\n","    sepia_img /= sepia_img.max()\n","\n","    return sepia_img\n","\n","demo = gr.Interface(sepia, \"image\", \"image\")\n","\n","demo.launch(debug=True, share=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"tabG6ONnY4lN","executionInfo":{"status":"ok","timestamp":1685736505791,"user_tz":-540,"elapsed":28907,"user":{"displayName":"Taehee Lee","userId":"12017922817927484990"}},"outputId":"5199ade9-07c3-4aa1-9a0c-f06aca8b691c"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n","Running on public URL: https://88a4cc154426b686ef.gradio.live\n","\n","This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div><iframe src=\"https://88a4cc154426b686ef.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Keyboard interruption in main thread... closing server.\n","Killing tunnel 127.0.0.1:7860 <> https://88a4cc154426b686ef.gradio.live\n"]},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["### 웹캠 입력, 이미지 출력 예제"],"metadata":{"id":"PGwgGTv56KiA"}},{"cell_type":"code","source":["import numpy as np\n","import gradio as gr\n","\n","def sepia(input_img):\n","    sepia_filter = np.array([\n","        [0.393, 0.769, 0.189], \n","        [0.349, 0.686, 0.168], \n","        [0.272, 0.534, 0.131]\n","    ])\n","    sepia_img = input_img.dot(sepia_filter.T)\n","    sepia_img /= sepia_img.max()\n","\n","    return sepia_img\n","\n","demo = gr.Interface(sepia, \"webcam\", \"image\")\n","\n","demo.launch(debug=True, share=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"VYPjHgvp5f2e","executionInfo":{"status":"ok","timestamp":1685736530994,"user_tz":-540,"elapsed":21123,"user":{"displayName":"Taehee Lee","userId":"12017922817927484990"}},"outputId":"5fa01ebc-c13b-428a-f722-58fb884301ac"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n","Running on public URL: https://a26c29c97d776d13d2.gradio.live\n","\n","This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<div><iframe src=\"https://a26c29c97d776d13d2.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Keyboard interruption in main thread... closing server.\n","Killing tunnel 127.0.0.1:7860 <> https://a26c29c97d776d13d2.gradio.live\n"]},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## 다수의 입력과 출력 예제"],"metadata":{"id":"36c0tiGC7cPr"}},{"cell_type":"code","source":["import gradio as gr\n","\n","def greet(name, is_morning, temperature):\n","    salutation = \"좋은 아침입니다.\" if is_morning else \"굿밤입니다.\"\n","    greeting = f\"{salutation} {name}님. 오늘은 {temperature}도 입니다!\"\n","\n","    celsius = (temperature - 32) * 5 / 9 # 화씨를 섭씨로 변환\n","\n","    return greeting, round(celsius, 2)\n","\n","demo = gr.Interface(\n","    fn=greet,\n","    inputs=[\"text\", \"checkbox\", gr.Slider(0, 100)],\n","    outputs=[\"text\", \"number\"],\n",")\n","\n","demo.launch(debug=True, share=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":646},"id":"tLOVTlMv6V72","executionInfo":{"status":"ok","timestamp":1685736556480,"user_tz":-540,"elapsed":2098,"user":{"displayName":"Taehee Lee","userId":"12017922817927484990"}},"outputId":"05ba603b-d836-4fc5-d627-491f1d82f4f6"},"execution_count":5,"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n","Running on public URL: https://26606a941a0bd7f849.gradio.live\n","\n","This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"]},{"data":{"text/html":["<div><iframe src=\"https://26606a941a0bd7f849.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen></iframe></div>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{},"output_type":"display_data"},{"output_type":"stream","name":"stdout","text":["Keyboard interruption in main thread... closing server.\n","Killing tunnel 127.0.0.1:7860 <> https://26606a941a0bd7f849.gradio.live\n"]},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":5}]}]}